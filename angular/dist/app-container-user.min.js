/*
 * app-container-user
 * Version: 1.0.0 - 2017-01-14
 */
angular.module("app-container-user.filters",[]).filter("fullName",[function(){return function(a){if(a&&(a.fname||a.sname))return a.fname&&a.sname?a.fname+" "+a.sname:a.fname?a.fname:a.sname}}]),angular.module("app-container-user",["app-container-common","app-container-user.filters","app-container-user.uadmin","templates-app-container-user"]).service("User",["$appService",function(a){var b,c=a("user/:id");return c.prototype.isAdmin=function(){return this.roles&&this.roles.length&&this.roles.indexOf("admin")!==-1},c.prototype.makeAdmin=function(){this.isAdmin()||this.roles.push("admin")},c.prototype.makeNormal=function(){this.isAdmin()&&this.roles.splice(this.roles.indexOf("admin"),1)},c.me=function(){return b?b:b=c.get({id:"me"})},c}]),angular.module("templates-app-container-user",["js/uadmin/edit-user.html","js/uadmin/password-confirm.html","js/uadmin/user-administration.html"]),angular.module("js/uadmin/edit-user.html",[]).run(["$templateCache",function(a){a.put("js/uadmin/edit-user.html",'<div class="clearfix" ng-class="{\'modal-header\': isModal}">\n    <a ng-if="isModal" href class="pull-right" ng-click="dismiss()"><i class="fa fa-times-circle-o fa-2x"></i></a>\n    <h2>{{title}}</h2>\n</div>\n<div class="clearfix" ng-class="{\'modal-body\': isModal}">\n    <form name="editUserForm">\n        <div class="form-group">\n            <label for="email">E-mail</label>\n            <input  ng-if="me.isAdmin()" type="email" class="form-control" id="email" placeholder="Email" ng-model="user.email" required existing-emails="existingEmails">\n            <span ng-if="!me.isAdmin()"><br />{{user.email}}</span>\n        </div>\n        <div class="form-group">\n            <label for="firstName">First name</label>\n            <input type="text" class="form-control" id="firstName" placeholder="First Name" ng-model="user.fname" required>\n        </div>\n        <div class="form-group">\n            <label for="lastName">Last name</label>\n            <input type="text" class="form-control" id="lastName" placeholder="Last Name" ng-model="user.sname" required>\n        </div>\n        <div class="checkbox" ng-show="isModal">\n            <label>\n                <input type="checkbox" ng-model="isAdmin"> Administrator\n            </label>\n        </div>\n        <div class="checkbox" ng-show="user._id">\n            <label>\n                <input type="checkbox" ng-model="resetPassword"> Reset Password\n            </label>\n        </div>\n        <password-confirm user="user" ng-if="resetPassword"></password-confirm>\n        <ul class="list-inline pull-right">\n            <li ng-if="isModal"><a class="btn btn-default" ng-click="dismiss()">Cancel</a></li>\n            <li><a class="btn btn-default" ng-click="ok()" ng-disabled="editUserForm.$invalid">OK</a></li>\n        </ul>\n        <p class="text-danger" ng-if="editUserForm.$error.password[0].$viewValue">\n            Password must be at least 8 characters long and contain at least one character from all four character classes; upper, lower, numeric and symbols.\n        </p>\n        <p class="text-danger" ng-if="user.secret && user.secret !== user.$$secret">Password and password confirmation do not match.</p>\n        <p class="text-danger" ng-if="editUserForm.$error.existingEmails[0].$viewValue">\n            There is already a user with the e-mail address {{editUserForm.$error.existingEmails[0].$viewValue}}\n        </p>\n    </form>\n</div>')}]),angular.module("js/uadmin/password-confirm.html",[]).run(["$templateCache",function(a){a.put("js/uadmin/password-confirm.html",'<div class="form-group">\n    <label for="password">Password</label>\n    <input type="password" class="form-control" id="password" placeholder="Password" ng-model="user.secret" password-validate="user" password-validate-key="password">\n</div>\n<div class="form-group">\n    <label for="passwordConfirm">Password confirm</label>\n    <input type="password" class="form-control" id="passwordConfirm" placeholder="Password" ng-model="user.$$secret" password-validate="user" password-validate-key="confirm">\n</div>')}]),angular.module("js/uadmin/user-administration.html",[]).run(["$templateCache",function(a){a.put("js/uadmin/user-administration.html",'<table class="table table-striped table-condensed user-administration" ng-if="me.isAdmin()">\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>E-Mail</th>\n            <th><span class="hidden-xs">Administrator</span><span class="visible-xs">Admin</span></th>\n            <th class="text-right"><a href ng-click="create()" uib-tooltip="New User" tooltip-placement="left"><i class="fa fa-plus"></i></a></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr ng-repeat="user in users">\n            <td>{{user | fullName}}</td>\n            <td><a ng-href="mailto:{{user.email}}">{{user.email}}</a></td>\n            <td><i ng-if="user.isAdmin()" class="fa fa-check"></i></td>\n            <td class="text-right">\n                <ul class="list-inline">\n                    <li><a href ng-click="edit(user)" uib-tooltip="Edit User" tooltip-placement="left"><i class="fa fa-pencil"></i></a></li>\n                    <li><a href ng-click="delete(user)" uib-tooltip="Delete User" tooltip-placement="left"><i class="fa fa-times"></i></a></li>\n                </ul>\n            </td>\n        </tr>\n    </tbody>\n</table>\n')}]),angular.module("app-container-user.uadmin",[]).controller("EditUserController",["$scope","$uibModalInstance","User","theUser","existingEmails","title",function(a,b,c,d,e,f){a.me=c.me(),a.title=f,a.isModal=!0,a.user=d,a.existingEmails=e,a.dismiss=b.dismiss,a.resetPassword=!d._id,a.isAdmin=d.isAdmin(),a.$watch("isAdmin",function(){a.user[a.isAdmin?"makeAdmin":"makeNormal"]()}),a.ok=function(){b.close(a.user)}}]).directive("userProfile",["$log","User","NotificationService",function(a,b,c){return{restrict:"E",templateUrl:"js/uadmin/edit-user.html",link:function(a,d,e){b.me().$promise.then(function(b){a.me=b,a.user=angular.extend({},b),a.title="Profile",a.ok=function(){angular.extend(b,a.user),b.$update({id:b._id},function(){c.addInfo("Profile updated")},c.addError)}})}}}]).directive("existingEmails",["$q","$parse",function(a,b){return{require:"ngModel",link:function(c,d,e,f){var g=b(e.existingEmails)(c);g&&(f.$asyncValidators.existingEmails=function(b,c){var d=a.defer();return g.indexOf(b)===-1?d.resolve(!0):d.reject(),d.promise})}}}]).directive("passwordValidate",["$q","$parse",function(a,b){return{require:"ngModel",link:function(c,d,e,f){var g=b(e.passwordValidate)(c);g&&e.passwordValidateKey&&(f.$asyncValidators[e.passwordValidateKey]=function(b,c){var d=a.defer();return c&&c.match(/(?=.{8,})(?=.*?[^\w\s])(?=.*?[0-9])(?=.*?[A-Z]).*?[a-z].*/)?d.resolve(!0):d.reject(),d.promise})}}}]).directive("passwordConfirm",[function(){return{restrict:"E",templateUrl:"js/uadmin/password-confirm.html",scope:{user:"="}}}]).directive("userAdministration",["$log","$uibModal","User","DialogService","NotificationService",function(a,b,c,d,e){return{restrict:"E",templateUrl:"js/uadmin/user-administration.html",link:function(a,f,g){function h(){c.query(function(b){a.users=b.list.filter(function(b){return b._id!==a.me._id})}),a.create=function(){b.open({templateUrl:"js/uadmin/edit-user.html",controller:"EditUserController",windowClass:"edit-user",size:"lg",backdrop:"static",keyboard:!1,resolve:{theUser:function(){return new c({roles:["user"]})},title:function(){return"Create User"},existingEmails:function(){return a.users.map(function(a){return a.email}).concat([a.me.email])}}}).result.then(function(a){a.$save(function(){e.addInfo("User created."),h()},e.addError)})},a.edit=function(d){b.open({templateUrl:"js/uadmin/edit-user.html",controller:"EditUserController",windowClass:"edit-user",size:"lg",backdrop:"static",keyboard:!1,resolve:{theUser:function(){return angular.extend(new c,d)},title:function(){return"Edit User"},existingEmails:function(){return a.users.filter(function(a){return a._id!==d._id}).map(function(a){return a.email}).concat([a.me.email])}}}).result.then(function(a){angular.extend(d,a),d.$update({id:d._id},function(){e.addInfo("User updated.")},e.addError)})},a.delete=function(a){d.confirm({question:"Are you sure you want to delete "+a.email+"?",warning:"This cannot be undone."}).then(function(){a.$remove({id:a._id},function(){e.addInfo("User deleted."),h()},e.addError)})}}c.me().$promise.then(function(b){b.isAdmin()&&(a.me=b,h())})}}}]);