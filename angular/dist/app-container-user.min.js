/*
 * app-container-user
 * Version: 1.0.0 - 2017-06-13
 */
angular.module("app-container-user.filters",[]).filter("fullName",[function(){return function(a){if(a&&(a.fname||a.sname))return a.fname&&a.sname?a.fname+" "+a.sname:a.fname?a.fname:a.sname}}]),angular.module("app-container-user",["app-container-common","app-container-user.filters","app-container-user.uadmin","templates-app-container-user"]).service("User",["$appService",function(a){var b,c=a("user/:id");return c.prototype.isAdmin=function(){return this.roles&&this.roles.length&&this.roles.indexOf("admin")!==-1},c.prototype.makeAdmin=function(){this.isAdmin()||this.roles.push("admin")},c.prototype.makeNormal=function(){this.isAdmin()&&this.roles.splice(this.roles.indexOf("admin"),1)},c.me=function(){return b?b:b=c.get({id:"me"})},c}]),angular.module("templates-app-container-user",["js/uadmin/edit-user.html","js/uadmin/password-confirm.html","js/uadmin/user-administration.html"]),angular.module("js/uadmin/edit-user.html",[]).run(["$templateCache",function(a){a.put("js/uadmin/edit-user.html",'<div ng-class="{\'solo-view\' : !isModal}">\n    <section class="app-panel">\n        <md-toolbar class="md-toolbar-tools">\n            <h2 flex md-truncate>{{title}}</h2>\n            <md-button class="md-icon-button close-dialog" aria-label="Close dialog" ng-if="isModal" ng-click="cancel()"></md-button>\n        </md-toolbar>\n        <md-content layout-padding>\n            <form name="editUserForm">\n                <div layout="column">\n                    <md-input-container>\n                        <label>E-mail</label>\n                        <input  ng-if="me.isAdmin()" type="email" ng-model="user.email" required existing-emails="existingEmails">\n                        <span ng-if="!me.isAdmin()"><br />{{user.email}}</span>\n                    </md-input-container>\n                    <div layout="row" layout-xs="column">\n                        <md-input-container flex>\n                            <label>First name</label>\n                            <input type="text" ng-model="user.fname" required>\n                        </md-input-container>\n                        <md-input-container flex>\n                            <label>Last name</label>\n                            <input type="text" ng-model="user.sname" required>\n                        </md-input-container>\n                    </div>\n                    <md-checkbox ng-show="isModal" ng-model="isAdmin"> Administrator</md-checkbox>\n                    <md-checkbox ng-show="user._id" ng-model="resetPassword">Reset Password</md-checkbox>\n                    <password-confirm user="user" ng-if="resetPassword"></password-confirm>\n                    <div layout="row" layout-align="end end">\n                        <md-button ng-if="isModal" ng-click="cancel()">Cancel</md-button>\n                        <md-button class="md-primary" ng-click="ok()" ng-disabled="editUserForm.$invalid">OK</md-button>\n                    </div>\n                </div>\n\n                <div ng-messages="editUserForm.$error" md-colors="{color: \'default-warn\'}">\n                    <p ng-message="password">Password must be at least 8 characters long and contain at least one character from all four character classes; upper, lower, numeric and symbols.</p>\n                    <p ng-message="confirm">Password and password confirmation do not match.</p>\n                    <p ng-message="existingEmails">There is already a user with the e-mail address {{editUserForm.$error.existingEmails[0].$viewValue}}</p>\n                    <p ng-message="required">You must enter all required fields.</p>\n                </div>\n            </form>\n        </md-content>\n    </section>\n</div>\n')}]),angular.module("js/uadmin/password-confirm.html",[]).run(["$templateCache",function(a){a.put("js/uadmin/password-confirm.html",'<div layout="column">\n    <md-input-container>\n        <label>Password</label>\n        <input type="password" ng-model="user.secret" password-validate="user" password-validate-key="password" required>\n    </md-input-container>\n    <md-input-container>\n        <label>Password confirm</label>\n        <input type="password" ng-model="user.$$secret" password-compare="user" password-key="secret" password-compare-key="confirm" required>\n    </md-input-container>\n</div>\n')}]),angular.module("js/uadmin/user-administration.html",[]).run(["$templateCache",function(a){a.put("js/uadmin/user-administration.html",'<md-button id="uadmin-add-user" class="md-raised md-icon-button" ng-if="me.isAdmin()" ng-click="create()">\n    <md-tooltip md-direction="right">New user</md-tooltip>\n</md-button>\n<div class="solo-view" ng-if="me.isAdmin()">\n    <section class="app-panel user-admin">\n        <md-toolbar class="md-toolbar-tools">\n            <h2 flex md-truncate>User administration</h2>\n        </md-toolbar>\n        <md-content flex>\n        <md-list>\n            <md-list-item ng-repeat="user in users" ng-click="edit(user)" ng-disabled="user._id === me._id">\n                <md-list-item-text layout="column" class="md-1-line">\n                    <h4>{{user | fullName}}<span ng-if="user.isAdmin()"> (administrator)</span> <a ng-href="mailto:{{user.email}}">{{user.email}}</a></h4>\n                </md-list-item-text>\n                <md-button ng-if="user._id !== me._id" class="md-icon-button delete-user" aria-label="Delete user" ng-click="delete(user)">\n                    <md-tooltip md-direction="left">Delete user</md-tooltip>\n                </md-button>\n            </md-list-item>\n        </md-list>\n    </md-content>\n    </section>\n</div>\n')}]),angular.module("app-container-user.uadmin",[]).controller("EditUserController",["$scope","$mdDialog","User",function(a,b,c){a.me=c.me(),a.isModal=!0,a.cancel=b.cancel,a.resetPassword=!a.user._id,a.isAdmin=a.user.isAdmin(),a.$watch("isAdmin",function(){a.user[a.isAdmin?"makeAdmin":"makeNormal"]()}),a.ok=function(){b.hide(a.user)}}]).directive("userProfile",["$log","User","NotificationService",function(a,b,c){return{restrict:"E",templateUrl:"js/uadmin/edit-user.html",link:function(a,d,e){b.me().$promise.then(function(b){a.me=b,a.user=angular.extend({},b),a.title="Profile",a.ok=function(){angular.extend(b,a.user),b.$update({id:b._id},function(){c.addInfo("Profile updated")},c.addError)}})}}}]).directive("existingEmails",["$q","$parse",function(a,b){return{require:"ngModel",link:function(c,d,e,f){var g=b(e.existingEmails)(c);g&&(f.$asyncValidators.existingEmails=function(b,c){var d=a.defer();return g.indexOf(b)===-1?d.resolve(!0):d.reject(),d.promise})}}}]).directive("passwordValidate",["$q","$parse",function(a,b){return{require:"ngModel",link:function(c,d,e,f){var g=b(e.passwordValidate)(c);g&&e.passwordValidateKey&&(f.$asyncValidators[e.passwordValidateKey]=function(b,c){var d=a.defer();return c&&c.match(/(?=.{8,})(?=.*?[^\w\s])(?=.*?[0-9])(?=.*?[A-Z]).*?[a-z].*/)?d.resolve(!0):d.reject(),d.promise})}}}]).directive("passwordCompare",["$q","$parse",function(a,b){return{require:"ngModel",link:function(c,d,e,f){var g=b(e.passwordCompare)(c);g&&e.passwordKey&&e.passwordCompareKey&&(f.$asyncValidators[e.passwordCompareKey]=function(b,c){var d=a.defer();return c===g[e.passwordKey]?d.resolve(!0):d.reject(),d.promise})}}}]).directive("passwordConfirm",[function(){return{restrict:"E",templateUrl:"js/uadmin/password-confirm.html",scope:{user:"="}}}]).directive("userAdministration",["$log","User","DialogService","NotificationService","$mdDialog",function(a,b,c,d,e){return{restrict:"E",templateUrl:"js/uadmin/user-administration.html",link:function(a,c,f){function g(){b.query(function(b){a.users=b.list,a.emails=a.users.map(function(a){return a.email})}),a.create=function(){e.show({templateUrl:"js/uadmin/edit-user.html",controller:"EditUserController",scope:angular.extend(a.$new(!0),{user:new b({roles:["user"]}),title:"New user",existingEmails:a.emails}),fullscreen:!0}).then(function(a){a.$save(function(){d.addInfo("User "+a.email+" created."),g()},d.addError)},angular.noop)},a.edit=function(c){e.show({templateUrl:"js/uadmin/edit-user.html",controller:"EditUserController",scope:angular.extend(a.$new(!0),{user:new b(angular.copy(c,{})),title:"Edit user",existingEmails:a.emails.filter(function(a){return a!==c.email})}),fullscreen:!0}).then(function(a){angular.extend(c,a),c.$update({id:c._id},function(){d.addInfo("User "+c.email+" updated.")},d.addError)},angular.noop)},a.delete=function(a){e.show(e.confirm().title("Are you sure you want to delete "+a.email+"?").textContent("This cannot be undone.").ariaLabel("Delete user").ok("Yes").cancel("No")).then(function(){a.$remove({id:a._id},function(){d.addInfo("User "+a.email+" deleted."),g()},d.addError)},angular.noop)}}b.me().$promise.then(function(b){b.isAdmin()&&(a.me=b,g())})}}}]);